const int trigPin = 5;
const int echoPin = 18;

const int led_yellow = 2;
const int led_green = 21;
const int led_red = 19;

//define sound speed in cm/uS
#define SOUND_SPEED 0.034

long duration;
float distanceCm;
int percentage;
float capacity = 400;

void setup() {
  Serial.begin(115200); // Starts the serial communication
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  pinMode(led_yellow, OUTPUT);
  pinMode(led_green, OUTPUT);
  pinMode(led_red, OUTPUT);
}

void loop() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  
  // Calculate the distance
  distanceCm = duration * SOUND_SPEED/2;
  percentage =  (capacity - distanceCm) / (capacity / 100);
  
  // Prints the distance in the Serial Monitor
  Serial.print("Distance (cm): ");
  Serial.println(distanceCm);
  Serial.print("Actual percentage: ");
  Serial.print(percentage);
  Serial.println('%');

  digitalWrite(led_green, LOW);
  digitalWrite(led_yellow, LOW);
  digitalWrite(led_red, LOW);

  if(percentage <= 50 && percentage > 20){ digitalWrite(led_yellow, HIGH);}
  else if(percentage <= 20){ digitalWrite(led_red, HIGH);}
  else {digitalWrite(led_green, HIGH);}
  
  delay(1000);
}